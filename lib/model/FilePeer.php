<?php



/**
 * Skeleton subclass for performing query and update operations on the 'file' table.
 *
 * 
 *
 * This class was autogenerated by Propel 1.5.6 on:
 *
 * Mon Oct 24 09:36:19 2011
 *
 * You should add additional methods to this class to meet the
 * application requirements.  This class will only be generated as
 * long as it does not already exist in the output directory.
 *
 * @package    propel.generator.lib.model
 */
class FilePeer extends BaseFilePeer {

  /**
   * @static
   * @param Branch $branch
   * @return void
   */
  public static function synchronize(Branch $branch)
  {
    $filesGit = GitCommand::getDiffFilesFromBranch($branch->getRepository()->getValue(),$branch->getCommitReference(), $branch->getCommitStatusChanged());

    $filesModel = FileQuery::create()
      ->where('File.BranchId', $branch->getId())
      ->find()
    ;

    foreach ($filesModel as $fileModel)
    {
      if (!array_key_exists($fileModel->getFilename(), $filesGit))
      {
        $fileModel->delete();
      }
      else
      {
        if ($fileModel->getCommitStatusChanged() != $branch->getCommitStatusChanged())
        {
          $fileModel->setStatusId(StatusPeer::A_TRAITER);
          $fileModel->setState($filesGit[$fileModel->getFilename()]['state']);
        }
        $fileModel->setCommitStatusChanged($branch->getCommitStatusChanged());
        $fileModel->save();
      }

      unset($filesGit[$fileModel->getFilename()]);
    }

    foreach ($filesGit as $name => $fileGit)
    {
      $file = new File();
      $file->setFilename($fileGit['filename'])
        ->setStatusId(StatusPeer::A_TRAITER)
        ->setState($fileGit['state'])
        ->setBranchId($branch->getId())
        ->setCommitStatusChanged($branch->getCommitStatusChanged())
        ->setUserStatusChanged(1)
        ->save()
      ;
    }
  }
} // FilePeer
